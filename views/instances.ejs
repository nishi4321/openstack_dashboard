<!doctype html>
<html lang="ja">

<head>
  <title>OpenStack Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
  <link href="https://fonts.googleapis.com/css?family=Noto+Sans+JP&display=swap" rel="stylesheet">
  <link href="./css/dashboard.css" rel="stylesheet">

  <script src="https://unpkg.com/feather-icons/dist/feather.min.js"></script>
</head>

<body>
  <header class="navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow">
    <a class="navbar-brand col-md-3 col-lg-2 me-0 px-3" href="#">OpenStack Dashboard</a>
    <button class="navbar-toggler position-absolute d-md-none collapsed" type="button" data-bs-toggle="collapse"
      data-bs-target="#sidebarMenu" aria-controls="sidebarMenu" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div style="margin-right: 0; margin-left: auto;">
      <ul class="navbar-nav">
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" id="navbarDarkDropdownMenuLink" role="button"
            data-bs-toggle="dropdown" aria-expanded="false">
            Dropdown
          </a>
          <ul class="dropdown-menu-end dropdown-menu dropdown-menu-dark" aria-labelledby="navbarDarkDropdownMenuLink"
            style="position: absolute !important; right: 0 !important;">
            <% for (var i=0; i < Regions.length; i++) { %>
              <li><a class="dropdown-item" href="#" onclick="onChangeRegion('<%= Regions[i] %>');">
                  <%= Regions[i] %>
                </a></li>
              <% } %>
          </ul>
        </li>
      </ul>
    </div>
    <ul class="navbar-nav px-3">
      <li class="nav-item text-nowrap">
        <span class="navbar-text">
          <%= USERNAME %>
        </span>
      </li>
    </ul>
    <ul class="navbar-nav px-3">
      <li class="nav-item text-nowrap">
        <a class="nav-link" href="javascript:void(0);" onclick="onLogout()">Logout</a>
      </li>
    </ul>
  </header>

  <script>
    function onChangeRegion(region) {
      Cookies.set("region", region, { expires: 1 })
      $('#navbarDarkDropdownMenuLink').text(region);
      location.reload();
    }
  </script>

  <div class="container-fluid">
    <div class="row">
      <nav class="col-md-2 d-none d-md-block bg-light sidebar">
        <div class="sidebar-sticky">
          <ul class="nav flex-column">
            <li class="nav-item">
              <a class="nav-link" href="/dashboard">
                <span data-feather="bar-chart-2"></span>
                Overview
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link active" href="/instances">
                <span data-feather="cpu"></span>
                Instance
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="javascript:void(0);">
                <span data-feather="shield"></span>
                Security Group (Coming soon)
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link" href="javascript:void(0);">
                <span data-feather="git-commit"></span>
                Network (Coming soon)
              </a>
            </li>
          </ul>
        </div>
      </nav>

      <main role="main" class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
        <div
          class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
          <h1 class="h2">Instances</h1>
          <div class="btn-toolbar mb-2 mb-md-0">
            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="onLoad();"
              style="margin-right:  .5rem !important;"><span data-feather="refresh-ccw"></span></button>
            <button type="button" class="btn btn-sm btn-outline-secondary" onclick="onCreateModalOpen();">Create new
              instance</button>
          </div>
        </div>

        <h3>Instance list</h3>
        <div class="table-responsive" style="height: 100%; overflow-x: hidden;">
          <table class="table table-striped table-sm">
            <thead>
              <tr>
                <th>Name</th>
                <th>IP Addresses</th>
                <th>CPU</th>
                <th>Memory</th>
                <th>Disk</th>
                <th>Image</th>
                <th>Security Group</th>
                <th>Status</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody id="instance-list">
            </tbody>
          </table>
        </div>

        <div class="progress" id="loadprogress">
          <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100"
            aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
        </div>
      </main>
    </div>
  </div>

  <div class="modal" id="detailModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="detailServerName"></h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <dl class='row' id="detailServerBody">
          </dl>
          <div class="progress" id="detail-progressbar">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100"
              aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal" id="createModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title">Create a new instance</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="createServerBody">
          <form>
            <div class="mb-3">
              <label for="ci-name" class="form-label">Instance name</label>
              <input class="form-control form-control-sm" id="ci-name" type="text" placeholder="instance name">
            </div>
            <div class="mb-3" style="display: none;">
              <label for="ci-name-dummy" class="form-label">Instance name</label>
              <input class="form-control form-control-sm" id="ci-name-dummy" type="text" placeholder="instance name">
            </div>
            <div class="mb-3">
              <label for="ci-os" class="form-label">Image</label>
              <select class="form-select form-select-sm" id="ci-os" onchange="onChangeCIOS()">
                <option>Small select</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="ci-size" class="form-label">Instance size</label>
              <select class="form-select form-select-sm" id="ci-size">
                <option>Small select</option>
              </select>
            </div>
            <div class="mb-3">
              <label for="ci-network" class="form-label">Instance network</label>
              <select class="form-select form-select-sm" id="ci-network">
                <option>Small select</option>
              </select>
            </div>
            <div class="mb-3" style="display: none;">
              <label for="ci-password-dummy" class="form-label">Instance password</label>
              <input class="form-control form-control-sm" id="ci-password-dummy" type="password"
                placeholder="instance password">
              <small class="form-text text-muted">Set password to your instance's default user.</small>
            </div>
            <div class="mb-3">
              <label for="ci-password" class="form-label">Instance password</label>
              <input class="form-control form-control-sm" id="ci-password" type="password"
                placeholder="instance password">
              <small class="form-text text-muted">Set password to your instance's default user.</small>
            </div>
          </form>
          <div class="progress" id="ci-progressbar">
            <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100"
              aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
          </div>
          <p class="" id="ci-info"></p>
          <div class="alert alert-danger" role="alert" id="ci-alert">
            Alert!
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" onclick="onCreateInstance();"
            id="ci-createbutton">Create</button>
        </div>
      </div>
    </div>
  </div>

  <div class="modal" id="deleteModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="deleteTitle">Create a new instance</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body" id="deleteServerBody">
          <div class="alert alert-danger" role="alert" id="ci-alert">
            Are you sure you want to delete? <strong>This operation cannot be undone.</strong>
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="deleteButton" id="ci-createbutton">Delete</button>
        </div>
      </div>
    </div>
  </div>


  <script src="https://cdn.jsdelivr.net/npm/superagent@6.1.0/dist/superagent.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/latest/js.cookie.min.js"></script>

  <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js"
    integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n"
    crossorigin="anonymous"></script>
  <script>
    window.jQuery || document.write('<script src="/docs/4.4/assets/js/vendor/jquery-slim.min.js"><\/script>')
  </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
    crossorigin="anonymous"></script>

  <script>
    var request = window.superagent;

    var flavorList;
    var imageList;
    var networkList;

    onLoad();

    function setDefaultRegion() {
      if (Cookies.get("region")) {
        $('#navbarDarkDropdownMenuLink').text(Cookies.get("region"));
      } else {
        $('#navbarDarkDropdownMenuLink').text("<%= Regions[0] %>");
        Cookies.set("region", "<%= Regions[0] %>", { expires: 1 })
      }
    }

    function onLogout() {
      Cookies.remove("jwttoken");
      location.href = "/";
    }

    function onLoad() {
      setDefaultRegion();
      $('#ci-progressbar').hide();
      $('#ci-alert').hide();
      $('#detail-progressbar').hide();
      $('#loadprogress').show();
      getFlavorList().then(function () {
        getImageList().then(function () {
          getNetworkList().then(function () {
            getInstanceList();
          })
        })
      });
    }

    function onChangeCIOS() {
      var os = $('#ci-os option:selected').text().toLowerCase();
      if(os.includes("ubuntu")) {
        $('#ci-info').text("Default user name is \"ubuntu\". You need to wait about 15 seconds before connecting to the instance.");
      }else if(os.includes("centos")) {
        $('#ci-info').text("Default user name is \"centos\". You need to wait about 15 seconds before connecting to the instance.");
      }else if(os.includes("windows")) {
        $('#ci-info').text("Default user name is \"admin\". You need to wait about 5 minutes before connecting to the instance.");
      }
    }

    function getFlavorList() {
      return new Promise(function (resolve, reject) {
        request.get("/api/getflavors?token=" + Cookies.get("jwttoken") + "&region=" + Cookies.get("region")).end(function (err, res) {
          if (res.body.success) {
            // OK
            flavorList = JSON.parse(res.body.body).flavors;
            resolve();
          } else {
            // Bad
            reject();
          }
        });
      })
    }

    function getImageList() {
      return new Promise(function (resolve, reject) {
        // Get Image list.
        request.get("/api/getimages?token=" + Cookies.get("jwttoken") + "&region=" + Cookies.get("region")).end(function (err, res2) {
          if (res2.body.success) {
            // OK
            imageList = JSON.parse(res2.body.body).images;
            resolve();
          } else {
            // Bad
            reject();
          }
        });
      })
    }

    function getNetworkList() {
      return new Promise(function (resolve, reject) {
        // Get Image list.
        request.get("/api/getnetworks?token=" + Cookies.get("jwttoken") + "&region=" + Cookies.get("region")).end(function (err, res2) {
          if (res2.body.success) {
            // OK
            networkList = JSON.parse(res2.body.body).networks;
            resolve();
          } else {
            // Bad
            reject();
          }
        });
      })
    }

    function getInstanceList() {
      request.get("/api/getinstances?token=" + Cookies.get("jwttoken") + "&region=" + Cookies.get("region")).end(function (err, res) {
        if (res.body.success) {
          // OK
          var instanceList = JSON.parse(res.body.body).servers;
          $('#instance-list').html("");
          for (var instance of instanceList) {
            var flavorId = instance.flavor.id;
            var cpu;
            var memory;
            var disk;
            for (var f of flavorList) {
              if (f.id == flavorId) {
                cpu = f.vcpus;
                memory = f.ram;
                disk = f.disk;
              }
            }
            generateList(instance.name, instance.addresses, cpu, memory, disk, instance.image.id, instance.security_groups, instance.status, instance.id)
          }
          // 
          $('#loadprogress').hide();
        } else {
          // Bad
        }
      });
    }

    function onCreateInstance() {
      $('#ci-createbutton').prop('disabled', true);
      $('#ci-progressbar').show();
      $('#ci-alert').hide();
      var name = $('#ci-name').val();
      var os = $('#ci-os').val();
      var os_text = $('#ci-os option:selected').text().toLowerCase();
      var size = $('#ci-size').val();
      var network = $('#ci-network').val();
      var password = $('#ci-password').val();
      request.post("/api/createinstance?token=" + Cookies.get("jwttoken") + "&region=" + Cookies.get("region")).send({ name: name, image: os, os_text: os_text, flavor: size, password: password, network: network }).end(function (err, res) {
        if (res.body.success) {
          // OK
          var result = res.body.body.server;
          $('#ci-createbutton').prop('disabled', false);
          $('#ci-progressbar').hide();
          $('#createModal').modal('hide');
          // 
          $('#loadprogress').show();
          // 
          timerId = setInterval(function () {
            var text = $('#instance-list').html();
            if (text.includes(result.id) && !text.includes("BUILD")) {
              // 
              $('#loadprogress').hide();
              clearInterval(timerId);
            }
            getInstanceList();
          }, 1000);
        } else {
          // Bad
          var errorMsgKeys = Object.keys(res.body.msg);
          var errorText = "";
          for (var key of errorMsgKeys) {
            errorText += res.body.msg[key].message
          }
          $('#ci-alert').text(errorText)
          $('#ci-alert').show();
          $('#ci-progressbar').hide();
          $('#ci-createbutton').prop('disabled', false);
        }
      });
    }

    function onCreateModalOpen() {
      // Open Modal
      $('#createModal').modal('show');
      // Set contents.
      $('#ci-size').text("");
      for (var f of flavorList) {
        $('#ci-size').append("<option value=\'" + f.id + "\'>" + f.name + " (vCPU : " + f.vcpus + "Core, Memory : " + f.ram + "MB, Disk : " + f.disk + "GB)</option>");
      }
      // Set Image list.
      $('#ci-os').text("");
      for (var i of imageList) {
        $('#ci-os').append("<option value=\'" + i.id + "\'>" + i.name + "</option>");
      }
      // Set Network list.
      $('#ci-network').text("");
      for (var i of networkList) {
        $('#ci-network').append("<option value=\'" + i.id + "\'>" + i.name + "</option>");
      }
      onChangeCIOS();
    }

    function onDetail(serverid) {
      $('#detailServerBody').html("");
      $('#detailServerName').text("");
      $('#detail-progressbar').show();
      // Open Modal
      $('#detailModal').modal('show');
      // 
      request.post("/api/getinstancedetail?token=" + Cookies.get("jwttoken") + "&region=" + Cookies.get("region")).send({ serverid: serverid }).end(function (err, res) {
        if (res.body.success) {
          // OK
          var detail = JSON.parse(res.body.body).server;
          $('#detailServerName').text(detail.name);
          var detailBody = "";
          // Status
          detailBody += "<dt class='col-sm-4'>Status</dt><dd class='col-sm-8'>" + detail.status + "</dd>";
          // Image
          for (var img of imageList) {
            if (img.id == detail.image.id) {
              detailBody += "<dt class='col-sm-4'>Image</dt><dd class='col-sm-8'>" + img.name + "</dd>";
            }
          }
          // Flavor
          for (var f of flavorList) {
            if (f.id == detail.flavor.id) {
              detailBody += "<dt class='col-sm-4'>CPU</dt><dd class='col-sm-8'>" + f.vcpus + "Core</dd>";
              detailBody += "<dt class='col-sm-4'>Memory</dt><dd class='col-sm-8'>" + f.ram + "MB</dd>";
              detailBody += "<dt class='col-sm-4'>Disk</dt><dd class='col-sm-8'>" + f.disk + "GB</dd>";
            }
          }
          // Addresses
          try {
            var keys = Object.keys(detail.addresses)
            for (var key of keys) {
              var ipaddressesList = detail.addresses[key];
              var ipText = "";
              for (var i of ipaddressesList) {
                ipText += "[" + key + "] " + i.addr + "<br>";
              }
            }
            detailBody += "<dt class='col-sm-4'>IP Addresses</dt><dd class='col-sm-8'>" + ipText + "</dd>";
          } catch (e) {
            detailBody += "<dt class='col-sm-4'>IP Addresses</dt><dd class='col-sm-8'></dd>";
          }
          // Security Group
          try {
            var sgText = [];
            for (var j of detail.security_groups) {
              sgText.push(j.name);
            }
            detailBody += "<dt class='col-sm-4'>Security Group</dt><dd class='col-sm-8'>" + sgText.toString().replace(",", ", ") + "</dd>";
          } catch (e) {
            detailBody += "<dt class='col-sm-4'>Security Group</dt><dd class='col-sm-8'></dd>";
          }
          // Created
          detailBody += "<dt class='col-sm-4'>Created</dt><dd class='col-sm-8'>" + detail.created + "</dd>";
          // Updated
          detailBody += "<dt class='col-sm-4'>Updated</dt><dd class='col-sm-8'>" + detail.updated + "</dd>";
          $('#detailServerBody').html(detailBody);
          // 
          $('#detail-progressbar').hide();
        } else {
          // Bad
        }
      });
    }

    function openDeleteModal(serverid, name) {
      // Open Modal
      $('#deleteModal').modal('show');
      $('#deleteTitle').text("Delete instance : " + name);
      $('#deleteButton').on('click', function () {
        onDelete(serverid);
        $('#deleteModal').modal('hide');
      });
    }

    function onDelete(serverid) {
      // 
      $('#loadprogress').show();
      request.post("/api/deleteinstance?token=" + Cookies.get("jwttoken") + "&region=" + Cookies.get("region")).send({ serverid: serverid }).end(function (err, res) {
        if (res.body.success) {
          // OK
          timerId = setInterval(function () {
            var text = $('#instance-list').html();
            if (!text.includes(serverid)) {
              // 
              $('#loadprogress').hide();
              clearInterval(timerId);
            }
            getInstanceList();
          }, 1000);
          setTimeout(onLoad, 1500);
        } else {
          // Bad
        }
      });
    }

    function bootInstance(instanceId) {
      request.post("/api/bootinstance?token=" + Cookies.get("jwttoken") + "&region=" + Cookies.get("region")).send({ instanceId: instanceId }).end(function (err, res) {
        if (res.body.success) {
          // OK
          timerId = setTimeout(function () {
            getInstanceList();
          }, 5000);
        } else {
          // Bad
        }
      });
    }

    function generateList(name, ipaddreses, cpu, memory, disk, image, securitygroup, status, serverid) {
      var dom = "<tr>";
      dom += "<td>" + name + "</td>";
      try {
        var keys = Object.keys(ipaddreses)
        for (var key of keys) {
          var ipaddressesList = ipaddreses[key];
          var ipText = [];
          for (var i of ipaddressesList) {
            ipText.push(i.addr);
          }
        }
        dom += "<td>" + ipText.toString().replace(",", ", ") + "</td>";
      } catch {
        dom += "<td></td>";
      }
      if (cpu == undefined) {
        dom += "<td>Error</td>";
      } else {
        dom += "<td>" + cpu + "Core</td>";
      }
      if (memory == undefined) {
        dom += "<td>Error</td>";
      } else {
        dom += "<td>" + memory + "MB</td>";
      }
      if (disk == undefined) {
        dom += "<td>Error</td>";
      } else {
        dom += "<td>" + disk + "GB</td>";
      }
      var imageName = "Unknown";
      for (var img of imageList) {
        if (img.id == image) {
          imageName = img.name;
        }
      }
      dom += "<td>" + imageName + "</td>";
      try {
        var sgText = [];
        for (var j of securitygroup) {
          sgText.push(j.name);
        }
        dom += "<td>" + sgText.toString().replace(",", ", ") + "</td>";
      } catch {
        dom += "<td></td>";
      }
      dom += "<td>" + status + "</td>";
      dom += '<td><div class="btn-group"><button class="btn btn-outline-dark btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Actions</button><div class="dropdown-menu">';
      var dropdown_item = '<a class="dropdown-item" href="javascript:void(0);" onclick="onDetail(\'' + serverid + '\');">View detail</a>';
      // Boot instance.
      if (status == "SHUTOFF") {
        dropdown_item += '<a class="dropdown-item" href="javascript:void(0);" onclick="bootInstance(\'' + serverid + '\');">Boot instance</a>'
      }
      dropdown_item += '<div class="dropdown-divider"></div>';
      dropdown_item += '<a class="dropdown-item text-danger" href="javascript:void(0);" onclick="openDeleteModal(\'' + serverid + '\', \'' + name + '\');">Delete instance</a>';
      dom += dropdown_item;
      dom += '</div></div></td>';
      $('#instance-list').append(dom);
    }

  </script>

  <!-- Icons -->
  <script>
    feather.replace()
  </script>

</body>

</html>